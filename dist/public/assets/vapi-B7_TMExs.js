import{i as T}from"./charts-ceMktdbA.js";import{r as $}from"./daily-B2K33vhj.js";import{ae as A}from"./vendor-BXT5a8vO.js";function O(n,e){for(var t=0;t<e.length;t++){const r=e[t];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in n)){const i=Object.getOwnPropertyDescriptor(r,s);i&&Object.defineProperty(n,s,i.get?i:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}var C={},m={},h={};Object.defineProperty(h,"__esModule",{value:!0});h.Api=h.HttpClient=h.ContentType=void 0;var o;(function(n){n.Json="application/json",n.FormData="multipart/form-data",n.UrlEncoded="application/x-www-form-urlencoded",n.Text="text/plain"})(o||(h.ContentType=o={}));class j{baseUrl="https://api.vapi.ai";securityData=null;securityWorker;abortControllers=new Map;customFetch=(...e)=>fetch(...e);baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"};constructor(e={}){Object.assign(this,e)}setSecurityData=e=>{this.securityData=e};encodeQueryParam(e,t){return`${encodeURIComponent(e)}=${encodeURIComponent(typeof t=="number"?t:`${t}`)}`}addQueryParam(e,t){return this.encodeQueryParam(t,e[t])}addArrayQueryParam(e,t){return e[t].map(s=>this.encodeQueryParam(t,s)).join("&")}toQueryString(e){const t=e||{};return Object.keys(t).filter(s=>typeof t[s]<"u").map(s=>Array.isArray(t[s])?this.addArrayQueryParam(t,s):this.addQueryParam(t,s)).join("&")}addQueryParams(e){const t=this.toQueryString(e);return t?`?${t}`:""}contentFormatters={[o.Json]:e=>e!==null&&(typeof e=="object"||typeof e=="string")?JSON.stringify(e):e,[o.Text]:e=>e!==null&&typeof e!="string"?JSON.stringify(e):e,[o.FormData]:e=>Object.keys(e||{}).reduce((t,r)=>{const s=e[r];return t.append(r,s instanceof Blob?s:typeof s=="object"&&s!==null?JSON.stringify(s):`${s}`),t},new FormData),[o.UrlEncoded]:e=>this.toQueryString(e)};mergeRequestParams(e,t){return{...this.baseApiParams,...e,...t||{},headers:{...this.baseApiParams.headers||{},...e.headers||{},...t&&t.headers||{}}}}createAbortSignal=e=>{if(this.abortControllers.has(e)){const r=this.abortControllers.get(e);return r?r.signal:void 0}const t=new AbortController;return this.abortControllers.set(e,t),t.signal};abortRequest=e=>{const t=this.abortControllers.get(e);t&&(t.abort(),this.abortControllers.delete(e))};request=async({body:e,secure:t,path:r,type:s,query:i,format:l,baseUrl:d,cancelToken:a,...v})=>{const S=(typeof t=="boolean"?t:this.baseApiParams.secure)&&this.securityWorker&&await this.securityWorker(this.securityData)||{},c=this.mergeRequestParams(v,S),b=i&&this.toQueryString(i),P=this.contentFormatters[s||o.Json],g=l||c.format;return this.customFetch(`${d||this.baseUrl||""}${r}${b?`?${b}`:""}`,{...c,headers:{...c.headers||{},...s&&s!==o.FormData?{"Content-Type":s}:{}},signal:(a?this.createAbortSignal(a):c.signal)||null,body:typeof e>"u"||e===null?null:P(e)}).then(async y=>{const u=y;u.data=null,u.error=null;const q=g?await y[g]().then(p=>(u.ok?u.data=p:u.error=p,u)).catch(p=>(u.error=p,u)):u;if(a&&this.abortControllers.delete(a),!y.ok)throw q;return q})}}h.HttpClient=j;class w extends j{call={callControllerCreate:(e,t={})=>this.request({path:"/call",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),callControllerFindAll:(e,t={})=>this.request({path:"/call",method:"GET",query:e,secure:!0,format:"json",...t}),callControllerFindOne:(e,t={})=>this.request({path:`/call/${e}`,method:"GET",secure:!0,format:"json",...t}),callControllerUpdate:(e,t,r={})=>this.request({path:`/call/${e}`,method:"PATCH",body:t,secure:!0,type:o.Json,format:"json",...r}),callControllerDeleteCallData:(e,t={})=>this.request({path:`/call/${e}`,method:"DELETE",secure:!0,format:"json",...t}),callControllerCreatePhoneCall:(e,t={})=>this.request({path:"/call/phone",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),callControllerCreateWebCall:(e,t={})=>this.request({path:"/call/web",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t})};v2={callControllerFindAllPaginated:(e,t={})=>this.request({path:"/v2/call",method:"GET",query:e,secure:!0,format:"json",...t}),callControllerFindAllMetadataPaginated:(e,t={})=>this.request({path:"/v2/call/metadata",method:"GET",query:e,secure:!0,format:"json",...t}),assistantControllerFindAllPaginated:(e,t={})=>this.request({path:"/v2/assistant",method:"GET",query:e,secure:!0,format:"json",...t}),phoneNumberControllerFindAllPaginated:(e,t={})=>this.request({path:"/v2/phone-number",method:"GET",query:e,secure:!0,format:"json",...t})};chat={chatController:(e={})=>this.request({path:"/chat",method:"POST",secure:!0,format:"json",...e}),chatControllerChatCompletions:(e,t={})=>this.request({path:"/chat/completions",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t})};assistant={assistantControllerCreate:(e,t={})=>this.request({path:"/assistant",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),assistantControllerFindAll:(e,t={})=>this.request({path:"/assistant",method:"GET",query:e,secure:!0,format:"json",...t}),assistantControllerFindOne:(e,t={})=>this.request({path:`/assistant/${e}`,method:"GET",secure:!0,format:"json",...t}),assistantControllerUpdate:(e,t,r={})=>this.request({path:`/assistant/${e}`,method:"PATCH",body:t,secure:!0,type:o.Json,format:"json",...r}),assistantControllerReplace:(e,t,r={})=>this.request({path:`/assistant/${e}`,method:"PUT",body:t,secure:!0,type:o.Json,format:"json",...r}),assistantControllerRemove:(e,t={})=>this.request({path:`/assistant/${e}`,method:"DELETE",secure:!0,format:"json",...t}),assistantControllerFindVersions:(e,t,r={})=>this.request({path:`/assistant/${e}/version`,method:"GET",query:t,secure:!0,format:"json",...r})};phoneNumber={phoneNumberControllerImportTwilio:(e,t={})=>this.request({path:"/phone-number/import/twilio",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),phoneNumberControllerImportVonage:(e,t={})=>this.request({path:"/phone-number/import/vonage",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),phoneNumberControllerCreate:(e,t={})=>this.request({path:"/phone-number",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),phoneNumberControllerFindAll:(e,t={})=>this.request({path:"/phone-number",method:"GET",query:e,secure:!0,format:"json",...t}),phoneNumberControllerFindOne:(e,t={})=>this.request({path:`/phone-number/${e}`,method:"GET",secure:!0,format:"json",...t}),phoneNumberControllerUpdate:(e,t,r={})=>this.request({path:`/phone-number/${e}`,method:"PATCH",body:t,secure:!0,type:o.Json,format:"json",...r}),phoneNumberControllerRemove:(e,t={})=>this.request({path:`/phone-number/${e}`,method:"DELETE",secure:!0,format:"json",...t})};tool={toolControllerCreate:(e,t={})=>this.request({path:"/tool",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),toolControllerFindAll:(e,t={})=>this.request({path:"/tool",method:"GET",query:e,secure:!0,format:"json",...t}),toolControllerFindOne:(e,t={})=>this.request({path:`/tool/${e}`,method:"GET",secure:!0,format:"json",...t}),toolControllerUpdate:(e,t,r={})=>this.request({path:`/tool/${e}`,method:"PATCH",body:t,secure:!0,type:o.Json,format:"json",...r}),toolControllerRemove:(e,t={})=>this.request({path:`/tool/${e}`,method:"DELETE",secure:!0,format:"json",...t})};file={fileControllerCreateDeprecated:(e,t={})=>this.request({path:"/file/upload",method:"POST",body:e,secure:!0,type:o.FormData,format:"json",...t}),fileControllerCreate:(e,t={})=>this.request({path:"/file",method:"POST",body:e,secure:!0,type:o.FormData,format:"json",...t}),fileControllerFindAll:(e={})=>this.request({path:"/file",method:"GET",secure:!0,format:"json",...e}),fileControllerFindOne:(e,t={})=>this.request({path:`/file/${e}`,method:"GET",secure:!0,format:"json",...t}),fileControllerUpdate:(e,t,r={})=>this.request({path:`/file/${e}`,method:"PATCH",body:t,secure:!0,type:o.Json,format:"json",...r}),fileControllerRemove:(e,t={})=>this.request({path:`/file/${e}`,method:"DELETE",secure:!0,format:"json",...t})};knowledgeBase={knowledgeBaseControllerCreate:(e,t={})=>this.request({path:"/knowledge-base",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),knowledgeBaseControllerFindAll:(e,t={})=>this.request({path:"/knowledge-base",method:"GET",query:e,secure:!0,format:"json",...t}),knowledgeBaseControllerFindOne:(e,t={})=>this.request({path:`/knowledge-base/${e}`,method:"GET",secure:!0,format:"json",...t}),knowledgeBaseControllerUpdate:(e,t,r={})=>this.request({path:`/knowledge-base/${e}`,method:"PATCH",body:t,secure:!0,type:o.Json,format:"json",...r}),knowledgeBaseControllerRemove:(e,t={})=>this.request({path:`/knowledge-base/${e}`,method:"DELETE",secure:!0,format:"json",...t})};workflow={workflowControllerFindAll:(e={})=>this.request({path:"/workflow",method:"GET",secure:!0,format:"json",...e}),workflowControllerCreate:(e,t={})=>this.request({path:"/workflow",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),workflowControllerFindOne:(e,t={})=>this.request({path:`/workflow/${e}`,method:"GET",secure:!0,format:"json",...t}),workflowControllerDelete:(e,t={})=>this.request({path:`/workflow/${e}`,method:"DELETE",secure:!0,format:"json",...t}),workflowControllerUpdate:(e,t,r={})=>this.request({path:`/workflow/${e}`,method:"PATCH",body:t,secure:!0,type:o.Json,format:"json",...r})};squad={squadControllerCreate:(e,t={})=>this.request({path:"/squad",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),squadControllerFindAll:(e,t={})=>this.request({path:"/squad",method:"GET",query:e,secure:!0,format:"json",...t}),squadControllerFindOne:(e,t={})=>this.request({path:`/squad/${e}`,method:"GET",secure:!0,format:"json",...t}),squadControllerUpdate:(e,t,r={})=>this.request({path:`/squad/${e}`,method:"PATCH",body:t,secure:!0,type:o.Json,format:"json",...r}),squadControllerRemove:(e,t={})=>this.request({path:`/squad/${e}`,method:"DELETE",secure:!0,format:"json",...t})};testSuite={testSuiteControllerFindAllPaginated:(e,t={})=>this.request({path:"/test-suite",method:"GET",query:e,secure:!0,format:"json",...t}),testSuiteControllerCreate:(e,t={})=>this.request({path:"/test-suite",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),testSuiteControllerFindOne:(e,t={})=>this.request({path:`/test-suite/${e}`,method:"GET",secure:!0,format:"json",...t}),testSuiteControllerUpdate:(e,t,r={})=>this.request({path:`/test-suite/${e}`,method:"PATCH",body:t,secure:!0,type:o.Json,format:"json",...r}),testSuiteControllerRemove:(e,t={})=>this.request({path:`/test-suite/${e}`,method:"DELETE",secure:!0,format:"json",...t}),testSuiteTestControllerFindAllPaginated:(e,t,r={})=>this.request({path:`/test-suite/${e}/test`,method:"GET",query:t,secure:!0,format:"json",...r}),testSuiteTestControllerCreate:(e,t,r={})=>this.request({path:`/test-suite/${e}/test`,method:"POST",body:t,secure:!0,type:o.Json,format:"json",...r}),testSuiteTestControllerFindOne:(e,t,r={})=>this.request({path:`/test-suite/${e}/test/${t}`,method:"GET",secure:!0,format:"json",...r}),testSuiteTestControllerUpdate:(e,t,r,s={})=>this.request({path:`/test-suite/${e}/test/${t}`,method:"PATCH",body:r,secure:!0,type:o.Json,format:"json",...s}),testSuiteTestControllerRemove:(e,t,r={})=>this.request({path:`/test-suite/${e}/test/${t}`,method:"DELETE",secure:!0,format:"json",...r}),testSuiteRunControllerFindAllPaginated:(e,t,r={})=>this.request({path:`/test-suite/${e}/run`,method:"GET",query:t,secure:!0,format:"json",...r}),testSuiteRunControllerCreate:(e,t,r={})=>this.request({path:`/test-suite/${e}/run`,method:"POST",body:t,secure:!0,type:o.Json,format:"json",...r}),testSuiteRunControllerFindOne:(e,t,r={})=>this.request({path:`/test-suite/${e}/run/${t}`,method:"GET",secure:!0,format:"json",...r}),testSuiteRunControllerUpdate:(e,t,r,s={})=>this.request({path:`/test-suite/${e}/run/${t}`,method:"PATCH",body:r,secure:!0,type:o.Json,format:"json",...s}),testSuiteRunControllerRemove:(e,t,r={})=>this.request({path:`/test-suite/${e}/run/${t}`,method:"DELETE",secure:!0,format:"json",...r})};metrics={analyticsControllerFindAllDeprecated:(e,t={})=>this.request({path:"/metrics",method:"GET",query:e,secure:!0,format:"json",...t})};analytics={analyticsControllerQuery:(e,t={})=>this.request({path:"/analytics",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t})};log={loggingControllerCallLogsQuery:(e,t={})=>this.request({path:"/log",method:"GET",query:e,secure:!0,format:"json",...t}),loggingControllerCallLogsDeleteQuery:(e,t={})=>this.request({path:"/log",method:"DELETE",query:e,secure:!0,...t})};logs={loggingControllerLogsQuery:(e,t={})=>this.request({path:"/logs",method:"GET",query:e,secure:!0,format:"json",...t}),loggingControllerLogsDeleteQuery:(e,t={})=>this.request({path:"/logs",method:"DELETE",query:e,secure:!0,...t})};org={orgControllerCreate:(e,t={})=>this.request({path:"/org",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),orgControllerFindAll:(e={})=>this.request({path:"/org",method:"GET",secure:!0,format:"json",...e}),orgControllerFindOne:(e,t={})=>this.request({path:`/org/${e}`,method:"GET",secure:!0,format:"json",...t}),orgControllerUpdate:(e,t,r={})=>this.request({path:`/org/${e}`,method:"PATCH",body:t,secure:!0,type:o.Json,format:"json",...r}),orgControllerDeleteOrg:(e,t={})=>this.request({path:`/org/${e}`,method:"DELETE",secure:!0,...t}),orgControllerFindAllUsers:(e,t={})=>this.request({path:`/org/${e}/user`,method:"GET",secure:!0,format:"json",...t}),orgControllerOrgLeave:(e,t={})=>this.request({path:`/org/${e}/leave`,method:"DELETE",secure:!0,...t}),orgControllerOrgRemoveUser:(e,t,r={})=>this.request({path:`/org/${e}/member/${t}/leave`,method:"DELETE",secure:!0,...r}),orgControllerUsersInvite:(e,t,r={})=>this.request({path:`/org/${e}/invite`,method:"POST",body:t,secure:!0,type:o.Json,...r}),orgControllerUserUpdate:(e,t,r={})=>this.request({path:`/org/${e}/role`,method:"PATCH",body:t,secure:!0,type:o.Json,...r}),orgControllerOrgToken:(e,t={})=>this.request({path:`/org/${e}/auth`,method:"GET",secure:!0,format:"json",...t})};token={tokenControllerCreate:(e,t={})=>this.request({path:"/token",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),tokenControllerFindAll:(e,t={})=>this.request({path:"/token",method:"GET",query:e,secure:!0,format:"json",...t}),tokenControllerFindOne:(e,t={})=>this.request({path:`/token/${e}`,method:"GET",secure:!0,format:"json",...t}),tokenControllerUpdate:(e,t,r={})=>this.request({path:`/token/${e}`,method:"PATCH",body:t,secure:!0,type:o.Json,format:"json",...r}),tokenControllerRemove:(e,t={})=>this.request({path:`/token/${e}`,method:"DELETE",secure:!0,format:"json",...t})};credential={credentialControllerCreate:(e,t={})=>this.request({path:"/credential",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),credentialControllerFindAll:(e,t={})=>this.request({path:"/credential",method:"GET",query:e,secure:!0,format:"json",...t}),credentialControllerFindOne:(e,t={})=>this.request({path:`/credential/${e}`,method:"GET",secure:!0,format:"json",...t}),credentialControllerUpdate:(e,t,r={})=>this.request({path:`/credential/${e}`,method:"PATCH",body:t,secure:!0,type:o.Json,format:"json",...r}),credentialControllerRemove:(e,t={})=>this.request({path:`/credential/${e}`,method:"DELETE",secure:!0,format:"json",...t}),credentialControllerGenerateSession:(e,t={})=>this.request({path:"/credential/session",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),credentialControllerHandleWebhook:(e,t={})=>this.request({path:"/credential/webhook",method:"POST",body:e,type:o.Json,...t}),credentialControllerTriggerCredentialAction:(e,t={})=>this.request({path:"/credential/trigger",method:"POST",body:e,secure:!0,type:o.Json,...t})};template={templateControllerCreate:(e,t={})=>this.request({path:"/template",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),templateControllerFindAll:(e,t={})=>this.request({path:"/template",method:"GET",query:e,secure:!0,format:"json",...t}),templateControllerFindAllPinned:(e={})=>this.request({path:"/template/pinned",method:"GET",secure:!0,format:"json",...e}),templateControllerFindOne:(e,t={})=>this.request({path:`/template/${e}`,method:"GET",secure:!0,format:"json",...t}),templateControllerUpdate:(e,t,r={})=>this.request({path:`/template/${e}`,method:"PATCH",body:t,secure:!0,type:o.Json,format:"json",...r}),templateControllerRemove:(e,t={})=>this.request({path:`/template/${e}`,method:"DELETE",secure:!0,format:"json",...t})};voiceLibrary={voiceLibraryControllerVoiceGetByProvider:(e,t,r={})=>this.request({path:`/voice-library/${e}`,method:"GET",query:t,secure:!0,format:"json",...r}),voiceLibraryControllerVoiceGetAccentsByProvider:(e,t={})=>this.request({path:`/voice-library/${e}/accents`,method:"GET",secure:!0,format:"json",...t}),voiceLibraryControllerVoiceLibrarySyncByProvider:(e,t={})=>this.request({path:`/voice-library/sync/${e}`,method:"POST",secure:!0,format:"json",...t}),voiceLibraryControllerVoiceLibrarySyncDefaultVoices:(e,t={})=>this.request({path:"/voice-library/sync",method:"POST",body:e,secure:!0,type:o.Json,format:"json",...t}),voiceLibraryControllerVoiceLibraryCreateSesameVoice:(e,t={})=>this.request({path:"/voice-library/create-sesame-voice",method:"POST",body:e,secure:!0,type:o.Json,...t})};provider={providerControllerGetWorkflows:(e,t,r={})=>this.request({path:`/${e}/workflows`,method:"GET",query:t,secure:!0,format:"json",...r}),providerControllerGetWorkflowTriggerHook:(e,t,r={})=>this.request({path:`/${e}/workflows/${t}/hooks`,method:"GET",secure:!0,format:"json",...r}),providerControllerGetLocations:(e,t={})=>this.request({path:`/${e}/locations`,method:"GET",secure:!0,format:"json",...t}),voiceProviderControllerSearchVoices:(e,t,r={})=>this.request({path:`/${e}/voices/search`,method:"GET",query:t,secure:!0,format:"json",...r}),voiceProviderControllerSearchVoice:(e,t,r={})=>this.request({path:`/${e}/voice/search`,method:"GET",query:t,secure:!0,format:"json",...r}),voiceProviderControllerAddVoices:(e,t,r={})=>this.request({path:`/${e}/voices/add`,method:"POST",body:t,secure:!0,type:o.Json,format:"json",...r}),voiceProviderControllerAddVoice:(e,t,r={})=>this.request({path:`/${e}/voice/add`,method:"POST",body:t,secure:!0,type:o.Json,format:"json",...r})};v11Labs={voiceProviderControllerCloneVoices:(e,t={})=>this.request({path:"/11labs/voice/clone",method:"POST",body:e,secure:!0,type:o.FormData,...t})}}h.Api=w;Object.defineProperty(m,"__esModule",{value:!0});m.client=void 0;const k=h,D=new k.Api({baseUrl:"https://api.vapi.ai",baseApiParams:{secure:!0},securityWorker:async n=>{if(n)return{headers:{Authorization:`Bearer ${n}`}}}});m.client=D;var E=T&&T.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(C,"__esModule",{value:!0});const G=E($),F=E(A),f=m;async function J(n,e){n.muted=!1,n.autoplay=!0,e!=null&&(n.srcObject=new MediaStream([e]),await n.play())}async function L(n,e){const t=document.createElement("audio");return t.dataset.participantId=e,document.body.appendChild(t),await J(t,n),t}function R(n){document.querySelector(`audio[data-participant-id="${n}"]`)?.remove()}function U(n,e,t,r){n.participant.local||e.updateParticipant(n.participant.session_id,{setSubscribedTracks:{audio:!0,video:t||r}})}class _ extends F.default{on(e,t){return super.on(e,t),this}once(e,t){return super.once(e,t),this}emit(e,...t){return super.emit(e,...t)}removeListener(e,t){return super.removeListener(e,t),this}removeAllListeners(e){return super.removeAllListeners(e),this}}class M extends _{started=!1;call=null;speakingTimeout=null;dailyCallConfig={};dailyCallObject={};hasEmittedCallEndedStatus=!1;constructor(e,t,r,s){super(),f.client.baseUrl=t??"https://api.vapi.ai",f.client.setSecurityData(e),this.dailyCallConfig=r??{},this.dailyCallObject=s??{}}cleanup(){this.started=!1,this.hasEmittedCallEndedStatus=!1,this.call?.destroy(),this.call=null,this.speakingTimeout=null}isMobileDevice(){if(typeof navigator>"u")return!1;const e=navigator.userAgent;return/android|iphone|ipad|ipod|iemobile|blackberry|bada/i.test(e.toLowerCase())}async sleep(e){return new Promise(t=>setTimeout(t,e))}async start(e,t,r,s){if(!e&&!r&&!s)throw new Error("Assistant or Squad or Workflow must be provided.");if(this.started)return null;this.started=!0;try{const i=(await f.client.call.callControllerCreateWebCall({assistant:typeof e=="string"?void 0:e,assistantId:typeof e=="string"?e:void 0,assistantOverrides:t,squad:typeof r=="string"?void 0:r,squadId:typeof r=="string"?r:void 0,workflow:typeof s=="string"?void 0:s,workflowId:typeof s=="string"?s:void 0})).data;this.call&&this.cleanup();const l=i?.artifactPlan?.videoRecordingEnabled??!1,d=i?.assistant?.voice?.provider==="tavus";if(this.call=G.default.createCallObject({audioSource:this.dailyCallObject.audioSource??!0,videoSource:this.dailyCallObject.videoSource??l,dailyConfig:this.dailyCallConfig}),this.call.iframe()?.style.setProperty("display","none"),this.call.on("left-meeting",()=>{this.emit("call-end"),this.hasEmittedCallEndedStatus||(this.emit("message",{type:"status-update",status:"ended",endedReason:"customer-ended-call"}),this.hasEmittedCallEndedStatus=!0),l&&this.call?.stopRecording(),this.cleanup()}),this.call.on("error",a=>{this.emit("error",a),l&&this.call?.stopRecording()}),this.call.on("camera-error",a=>{this.emit("error",a)}),this.call.on("track-started",async a=>{!a||!a.participant||a.participant?.local||a.participant?.user_name==="Vapi Speaker"&&(a.track.kind==="video"&&this.emit("video",a.track),a.track.kind==="audio"&&await L(a.track,a.participant.session_id),this.call?.sendAppMessage("playable"))}),this.call.on("participant-joined",a=>{!a||!this.call||U(a,this.call,l,d)}),this.call.on("participant-updated",a=>{a&&this.emit("daily-participant-updated",a.participant)}),this.call.on("participant-left",a=>{a&&R(a.participant.session_id)}),this.isMobileDevice()&&await this.sleep(1e3),await this.call.join({url:i.webCallUrl,subscribeToTracksAutomatically:!1}),l){const a=new Date().getTime();this.call.startRecording({width:1280,height:720,backgroundColor:"#FF1F2D3D",layout:{preset:"default"}}),this.call.on("recording-started",()=>{this.send({type:"control",control:"say-first-message",videoRecordingStartDelaySeconds:(new Date().getTime()-a)/1e3})})}return this.call.startRemoteParticipantsAudioLevelObserver(100),this.call.on("remote-participants-audio-level",a=>{a&&this.handleRemoteParticipantsAudioLevel(a)}),this.call.on("app-message",a=>this.onAppMessage(a)),this.call.on("nonfatal-error",a=>{a?.type==="audio-processor-error"&&this.call?.updateInputSettings({audio:{processor:{type:"none"}}}).then(()=>{this.call?.setLocalAudio(!0)})}),this.call.updateInputSettings({audio:{processor:{type:"noise-cancellation"}}}),i}catch(i){return console.error(i),this.emit("error",i),this.cleanup(),null}}onAppMessage(e){if(e)try{if(e.data==="listening")return this.emit("call-start");try{const t=JSON.parse(e.data);this.emit("message",t),t&&"type"in t&&"status"in t&&t.type==="status-update"&&t.status==="ended"&&(this.hasEmittedCallEndedStatus=!0)}catch(t){console.log("Error parsing message data: ",t)}}catch(t){console.error(t)}}handleRemoteParticipantsAudioLevel(e){const t=Object.values(e.participantsAudioLevel).reduce((s,i)=>s+i,0);this.emit("volume-level",Math.min(1,t/.15)),t>.01&&(this.speakingTimeout?(clearTimeout(this.speakingTimeout),this.speakingTimeout=null):this.emit("speech-start"),this.speakingTimeout=setTimeout(()=>{this.emit("speech-end"),this.speakingTimeout=null},1e3))}stop(){this.started=!1,this.call?.destroy(),this.call=null}send(e){this.call?.sendAppMessage(JSON.stringify(e))}setMuted(e){if(!this.call)throw new Error("Call object is not available.");this.call.setLocalAudio(!e)}isMuted(){return this.call?this.call.localAudio()===!1:!1}say(e,t,r){this.send({type:"say",message:e,endCallAfterSpoken:t,interruptionsEnabled:r??!1})}setInputDevicesAsync(e){this.call?.setInputDevicesAsync(e)}async increaseMicLevel(e){if(!this.call)throw new Error("Call object is not available.");try{const t=await navigator.mediaDevices.getUserMedia({audio:!0}),r=new AudioContext,s=r.createMediaStreamSource(t),i=r.createGain();i.gain.value=e,s.connect(i);const l=r.createMediaStreamDestination();i.connect(l);const[d]=l.stream.getAudioTracks();await this.call.setInputDevicesAsync({audioSource:d})}catch(t){console.error("Error adjusting microphone level:",t)}}setOutputDeviceAsync(e){this.call?.setOutputDeviceAsync(e)}getDailyCallObject(){return this.call}startScreenSharing(e,t){this.call?.startScreenShare({displayMediaOptions:e,screenVideoSendSettings:t})}stopScreenSharing(){this.call?.stopScreenShare()}}var H=C.default=M;const I=O({__proto__:null,default:H},[C]);export{I as v};
