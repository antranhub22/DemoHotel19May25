/* Voice Interface Animations */

@keyframes breathing {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

@keyframes waveform {
  0% { transform: scaleY(0.1); }
  50% { transform: scaleY(1); }
  100% { transform: scaleY(0.1); }
}

@keyframes pulse {
  0% { box-shadow: 0 0 0 0 rgba(27, 78, 139, 0.4); }
  70% { box-shadow: 0 0 0 50px rgba(27, 78, 139, 0); } /* Increased pulse size */
  100% { box-shadow: 0 0 0 0 rgba(27, 78, 139, 0); }
}

.voice-button {
  position: relative;
  border-radius: 50%;
  /* Remove background to let canvas show through */
  background: transparent;
  /* Keep animations and transitions */
  animation: breathing 3s ease-in-out infinite;
  transition: all 0.3s ease;
  /* Remove box-shadow as canvas handles its own styling */
  box-shadow: none;
}

.voice-button:hover {
  transform: scale(1.02);
  /* Remove background override on hover */
  background: transparent;
  box-shadow: none;
}

.voice-button:active {
  transform: scale(0.98);
}

.voice-button.listening {
  animation: pulse 2s infinite;
  /* Remove background override when listening */
  background: transparent;
}

/* Ensure canvas is visible and properly positioned */
.voice-button canvas {
  background: transparent !important;
  border: none !important;
  outline: none !important;
  display: block !important;
  z-index: 9999 !important; /* Force canvas to top layer */
  position: relative !important; /* Create stacking context */
}

/* Mobile optimizations - same canvas behavior as desktop */
@media (max-width: 768px) {
  .voice-button {
    /* Ensure no background conflicts on mobile */
    background: transparent !important;
    border: none !important;
    overflow: visible !important;
  }
  
  /* Disable hover effects on mobile for better performance */
  .voice-button:hover {
    transform: none;
  }
}

/* Additional mobile compatibility */
.voice-button, .voice-button * {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-perspective: 1000px;
  perspective: 1000px;
}
/* Canvas positioning handled by component styles */

.waveform-container {
  position: absolute;
  bottom: -75px; /* Adjusted position */
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  gap: 7.5px; /* Increased gap */
  height: 50px; /* Increased height */
}

.waveform-bar {
  width: 7.5px; /* Increased width */
  height: 100%;
  background: #1B4E8B;
  border-radius: 7.5px; /* Increased radius */
  transform-origin: bottom;
}

.status-indicator {
  position: absolute;
  top: -75px; /* Adjusted position */
  left: 50%;
  transform: translateX(-50%);
  padding: 12.5px 37.5px; /* Increased padding */
  border-radius: 37.5px; /* Increased radius */
  font-size: 35px; /* Increased font size */
  font-weight: 500;
  color: white;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(12.5px); /* Increased blur */
  transition: all 0.3s ease;
}

.status-indicator.listening {
  background: rgba(59, 130, 246, 0.9);
}

.status-indicator.processing {
  background: rgba(245, 158, 11, 0.9);
}

.status-indicator.speaking {
  background: rgba(16, 185, 129, 0.9);
}

/* Gradient Ring Effect - Remove background to let canvas show */
.gradient-ring {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  /* Remove background to let canvas show through */
  background: transparent;
  /* Remove animation as canvas handles its own effects */
  animation: none;
  z-index: 5; /* Lower than canvas */
}

@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
} 