/* Voice Interface Animations */

@keyframes breathing {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

@keyframes waveform {
  0% { transform: scaleY(0.1); }
  50% { transform: scaleY(1); }
  100% { transform: scaleY(0.1); }
}

@keyframes pulse {
  0% { box-shadow: 0 0 0 0 rgba(27, 78, 139, 0.4); }
  70% { box-shadow: 0 0 0 50px rgba(27, 78, 139, 0); } /* Increased pulse size */
  100% { box-shadow: 0 0 0 0 rgba(27, 78, 139, 0); }
}

.voice-button {
  position: relative;
  border-radius: 50%;
  /* Remove background to let canvas show through */
  background: transparent;
  /* Restore breathing animation for idle state */
  animation: breathing 3s ease-in-out infinite;
  transition: all 0.3s ease;
  /* Remove box-shadow as canvas handles its own styling */
  box-shadow: none;
  /* üîß CRITICAL FIX: Ensure container is stable for absolute canvas positioning */
  transform: none !important; /* Prevent any transform interference */
}

.voice-button:hover {
  /* üîß CRITICAL FIX: Remove scale transform that moves canvas */
  /* transform: scale(1.02); */
  /* Remove background override on hover */
  background: transparent;
  box-shadow: none;
}

.voice-button:active {
  /* üîß CRITICAL FIX: Remove scale transform that moves canvas */
  /* transform: scale(0.98); */
}

.voice-button.listening {
  /* Restore pulse animation for listening state */
  animation: pulse 2s infinite;
  /* Remove background override when listening */
  background: transparent;
}

/* ‚úÖ FIXED: Canvas styling without positioning conflicts */
.voice-button canvas {
  background: transparent !important;
  border: none !important;
  outline: none !important;
  display: block !important;
  z-index: 1 !important; /* Lower than container to allow touch events */
  /* ‚ùå REMOVED: position override that conflicts with JS positioning */
  image-rendering: -webkit-optimize-contrast !important; /* Crisp edges on webkit */
  image-rendering: crisp-edges !important; /* Modern browsers */
  -webkit-backface-visibility: hidden !important; /* Prevent blurry text on Safari */
  -webkit-font-smoothing: antialiased !important;
  transform: translateZ(0) !important; /* Force GPU acceleration */
  will-change: transform !important; /* Hint for browser optimization */
}

/* Mobile optimizations - Enhanced touch support */
@media (max-width: 768px) {
  .voice-button {
    /* Ensure no background conflicts on mobile */
    background: transparent !important;
    border: none !important;
    overflow: visible !important;
    /* Enhanced mobile touch */
    touch-action: manipulation !important; /* Fast touch response */
    -webkit-tap-highlight-color: transparent !important; /* Remove tap highlight */
    -webkit-user-select: none !important; /* Prevent text selection */
    user-select: none !important;
    -webkit-touch-callout: none !important; /* Disable context menu */
    /* Ensure touch target is large enough */
    min-width: 44px !important; /* iOS minimum touch target */
    min-height: 44px !important;
    /* CRITICAL: Ensure proper pointer events for mobile touch */
    pointer-events: auto !important;
    position: relative !important;
    z-index: 9999 !important;
  }
  
  /* Disable hover effects on mobile for better performance */
  .voice-button:hover {
    transform: none;
  }
  
  /* ‚úÖ FIX 5: Remove scale transform to prevent canvas misalignment */
  .voice-button:active {
    /* Remove scale transform that could move canvas */
    /* transform: scale(0.95) !important; */
    transition: opacity 0.1s ease !important;
    opacity: 0.8 !important; /* Use opacity instead of scale for feedback */
  }

  /* ‚úÖ CRITICAL FIX: Proper mobile touch event flow */
  .voice-button canvas {
    pointer-events: none !important; /* Canvas doesn't handle events */
    z-index: 1 !important; /* Lower than container */
    background: transparent !important;
  }

  /* ‚úÖ Container MUST handle ALL touch events on mobile */
  .voice-button[id*="main-siri-button"] {
    pointer-events: auto !important;
    z-index: 10000 !important;
    background: transparent !important;
    /* Enhanced touch area for mobile */
    min-width: 280px !important;
    min-height: 280px !important;
    /* CRITICAL: Ensure touch events reach the container */
    position: relative !important;
    overflow: visible !important;
  }

  /* ‚úÖ ALL children should not interfere with touch events */
  .voice-button[id*="main-siri-button"] * {
    pointer-events: none !important; /* Only main container handles events */
  }

  /* ‚úÖ Re-enable for main container (override specificity) */
  .voice-button[id*="main-siri-button"] {
    pointer-events: auto !important; /* Main container gets events */
  }

  /* ‚úÖ Ensure parent containers don't block events */
  .voice-button {
    pointer-events: auto !important;
    position: relative !important;
    z-index: 5000 !important;
  }
}

/* Additional mobile compatibility */
.voice-button, .voice-button * {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-perspective: 1000px;
  perspective: 1000px;
}
/* Canvas positioning handled by component styles */

.waveform-container {
  position: absolute;
  bottom: -75px; /* Adjusted position */
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  gap: 7.5px; /* Increased gap */
  height: 50px; /* Increased height */
}

.waveform-bar {
  width: 7.5px; /* Increased width */
  height: 100%;
  background: #1B4E8B;
  border-radius: 7.5px; /* Increased radius */
  transform-origin: bottom;
}

.status-indicator {
  position: absolute;
  top: -75px; /* Adjusted position */
  left: 50%;
  transform: translateX(-50%);
  padding: 12.5px 37.5px; /* Increased padding */
  border-radius: 37.5px; /* Increased radius */
  font-size: 35px; /* Increased font size */
  font-weight: 500;
  color: white;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(12.5px); /* Increased blur */
  transition: all 0.3s ease;
}

.status-indicator.listening {
  background: rgba(59, 130, 246, 0.9);
}

.status-indicator.processing {
  background: rgba(245, 158, 11, 0.9);
}

.status-indicator.speaking {
  background: rgba(16, 185, 129, 0.9);
}

/* Gradient Ring Effect - Remove background to let canvas show */
.gradient-ring {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  /* Remove background to let canvas show through */
  background: transparent;
  /* Remove animation as canvas handles its own effects */
  animation: none;
  z-index: 5; /* Lower than canvas */
}

@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* ========================================
   üöÄ GLASSMORPHISM 2025 ENHANCEMENTS
   ======================================== */

/* ‚ú® Holographic rim animation - positioned behind button */
@keyframes holographic-rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes glass-shimmer {
  0% { opacity: 0.3; }
  50% { opacity: 0.8; }
  100% { opacity: 0.3; }
}

/* üåà Holographic rim effect - SAFE: positioned behind main button */
.voice-button::before {
  content: '';
  position: absolute;
  inset: -4px;
  border-radius: 50%;
  background: conic-gradient(
    from 0deg,
    #FF0080, #FF8C00, #40E0D0, #8A2BE2, 
    #00FF7F, #FF6347, #4169E1, #FF0080
  );
  animation: holographic-rotate 4s linear infinite;
  filter: blur(12px);
  opacity: 0;
  z-index: -1; /* CRITICAL: Behind everything else */
  pointer-events: none; /* CRITICAL: No event interference */
  /* SAFE: No transform on main button - only on ::before */
}

/* üíé Enhanced glassmorphism for listening state */
.voice-button.listening::before {
  opacity: 0.6; /* Show holographic rim when listening */
  filter: blur(8px); /* Sharper when active */
  animation: holographic-rotate 2s linear infinite; /* Faster rotation */
}

/* üåü Subtle glass shimmer for idle state */
.voice-button:not(.listening)::before {
  opacity: 0.2; /* Very subtle when idle */
  animation: 
    holographic-rotate 6s linear infinite,
    glass-shimmer 3s ease-in-out infinite;
}

/* ‚ú® Enhanced glassmorphism backdrop */
.voice-button::after {
  content: '';
  position: absolute;
  inset: 2px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(20px) saturate(180%);
  border: 1px solid rgba(255, 255, 255, 0.1);
  opacity: 0;
  z-index: -1; /* CRITICAL: Behind canvas and main button */
  pointer-events: none; /* CRITICAL: No event interference */
  transition: opacity 0.3s ease;
}

/* üé® Show glassmorphism effect on hover/listening */
.voice-button:hover::after,
.voice-button.listening::after {
  opacity: 1;
  background: rgba(255, 255, 255, 0.08);
  box-shadow: 
    inset 0 1px 0 rgba(255, 255, 255, 0.2),
    0 8px 32px rgba(0, 0, 0, 0.1);
}

/* üì± Mobile optimizations for new effects */
@media (max-width: 768px) {
  .voice-button::before {
    filter: blur(8px); /* Less blur on mobile for performance */
    inset: -3px; /* Smaller rim on mobile */
  }
  
  .voice-button::after {
    backdrop-filter: blur(15px) saturate(150%); /* Reduced blur for mobile */
  }
  
  /* üîß CRITICAL: Maintain mobile touch functionality */
  .voice-button {
    pointer-events: auto !important; /* Main button still receives touches */
    z-index: 9999 !important; /* Highest priority for touch */
  }
  
  .voice-button::before,
  .voice-button::after {
    pointer-events: none !important; /* Decorative elements don't block touches */
  }
}

/* üõ°Ô∏è SAFETY: Preserve all existing critical protections */
.voice-button {
  /* UNCHANGED: All existing protections remain */
  transform: none !important; /* Prevent any transform interference */
  /* Enhanced: Add overflow handling for new effects */
  overflow: visible; /* Allow pseudo-elements to show */
}

/* üéØ Enhanced color integration with current language system */
.voice-button[data-language="en"]::before {
  background: conic-gradient(
    from 0deg,
    #5DB6B9, #E8B554, #5DB6B9, #E8B554
  );
}

.voice-button[data-language="vi"]::before {
  background: conic-gradient(
    from 0deg,
    #EC4899, #F9A8D4, #EC4899, #F9A8D4
  );
}

.voice-button[data-language="fr"]::before {
  background: conic-gradient(
    from 0deg,
    #8B5CF6, #A78BFA, #8B5CF6, #A78BFA
  );
}

.voice-button[data-language="zh"]::before {
  background: conic-gradient(
    from 0deg,
    #EF4444, #FCA5A5, #EF4444, #FCA5A5
  );
}

.voice-button[data-language="ru"]::before {
  background: conic-gradient(
    from 0deg,
    #10B981, #6EE7B7, #10B981, #6EE7B7
  );
}

.voice-button[data-language="ko"]::before {
  background: conic-gradient(
    from 0deg,
    #F59E0B, #FDE68A, #F59E0B, #FDE68A
  );
}