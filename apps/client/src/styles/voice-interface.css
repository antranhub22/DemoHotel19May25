/* Voice Interface Animations */

@keyframes breathing {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

@keyframes waveform {
  0% { transform: scaleY(0.1); }
  50% { transform: scaleY(1); }
  100% { transform: scaleY(0.1); }
}

@keyframes pulse {
  0% { box-shadow: 0 0 0 0 rgba(27, 78, 139, 0.4); }
  70% { box-shadow: 0 0 0 50px rgba(27, 78, 139, 0); } /* Increased pulse size */
  100% { box-shadow: 0 0 0 0 rgba(27, 78, 139, 0); }
}

.voice-button {
  position: relative;
  border-radius: 50%;
  /* Remove background to let canvas show through */
  background: transparent;
  /* Keep animations and transitions */
  animation: breathing 3s ease-in-out infinite;
  transition: all 0.3s ease;
  /* Remove box-shadow as canvas handles its own styling */
  box-shadow: none;
}

.voice-button:hover {
  transform: scale(1.02);
  /* Remove background override on hover */
  background: transparent;
  box-shadow: none;
}

.voice-button:active {
  transform: scale(0.98);
}

.voice-button.listening {
  animation: pulse 2s infinite;
  /* Remove background override when listening */
  background: transparent;
}

/* ✅ FIXED: Canvas styling without positioning conflicts */
.voice-button canvas {
  background: transparent !important;
  border: none !important;
  outline: none !important;
  display: block !important;
  z-index: 1 !important; /* Lower than container to allow touch events */
  /* ❌ REMOVED: position override that conflicts with JS positioning */
  image-rendering: -webkit-optimize-contrast !important; /* Crisp edges on webkit */
  image-rendering: crisp-edges !important; /* Modern browsers */
  -webkit-backface-visibility: hidden !important; /* Prevent blurry text on Safari */
  -webkit-font-smoothing: antialiased !important;
  transform: translateZ(0) !important; /* Force GPU acceleration */
  will-change: transform !important; /* Hint for browser optimization */
}

/* Mobile optimizations - Enhanced touch support */
@media (max-width: 768px) {
  .voice-button {
    /* Ensure no background conflicts on mobile */
    background: transparent !important;
    border: none !important;
    overflow: visible !important;
    /* Enhanced mobile touch */
    touch-action: manipulation !important; /* Fast touch response */
    -webkit-tap-highlight-color: transparent !important; /* Remove tap highlight */
    -webkit-user-select: none !important; /* Prevent text selection */
    user-select: none !important;
    -webkit-touch-callout: none !important; /* Disable context menu */
    /* Ensure touch target is large enough */
    min-width: 44px !important; /* iOS minimum touch target */
    min-height: 44px !important;
    /* CRITICAL: Ensure proper pointer events for mobile touch */
    pointer-events: auto !important;
    position: relative !important;
    z-index: 9999 !important;
  }
  
  /* Disable hover effects on mobile for better performance */
  .voice-button:hover {
    transform: none;
  }
  
  /* Add active state for mobile feedback */
  .voice-button:active {
    transform: scale(0.95) !important;
    transition: transform 0.1s ease !important;
  }

  /* ✅ CRITICAL FIX: Proper mobile touch event flow */
  .voice-button canvas {
    pointer-events: none !important; /* Canvas doesn't handle events */
    z-index: 1 !important; /* Lower than container */
    background: transparent !important;
  }

  /* ✅ Container MUST handle ALL touch events on mobile */
  .voice-button[id*="main-siri-button"] {
    pointer-events: auto !important;
    z-index: 10000 !important;
    background: transparent !important;
    /* Enhanced touch area for mobile */
    min-width: 280px !important;
    min-height: 280px !important;
    /* CRITICAL: Ensure touch events reach the container */
    position: relative !important;
    overflow: visible !important;
  }

  /* ✅ ALL children should not interfere with touch events */
  .voice-button[id*="main-siri-button"] * {
    pointer-events: none !important; /* Only main container handles events */
  }

  /* ✅ Re-enable for main container (override specificity) */
  .voice-button[id*="main-siri-button"] {
    pointer-events: auto !important; /* Main container gets events */
  }

  /* ✅ Ensure parent containers don't block events */
  .voice-button {
    pointer-events: auto !important;
    position: relative !important;
    z-index: 5000 !important;
  }
}

/* Additional mobile compatibility */
.voice-button, .voice-button * {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-perspective: 1000px;
  perspective: 1000px;
}
/* Canvas positioning handled by component styles */

.waveform-container {
  position: absolute;
  bottom: -75px; /* Adjusted position */
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  gap: 7.5px; /* Increased gap */
  height: 50px; /* Increased height */
}

.waveform-bar {
  width: 7.5px; /* Increased width */
  height: 100%;
  background: #1B4E8B;
  border-radius: 7.5px; /* Increased radius */
  transform-origin: bottom;
}

.status-indicator {
  position: absolute;
  top: -75px; /* Adjusted position */
  left: 50%;
  transform: translateX(-50%);
  padding: 12.5px 37.5px; /* Increased padding */
  border-radius: 37.5px; /* Increased radius */
  font-size: 35px; /* Increased font size */
  font-weight: 500;
  color: white;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(12.5px); /* Increased blur */
  transition: all 0.3s ease;
}

.status-indicator.listening {
  background: rgba(59, 130, 246, 0.9);
}

.status-indicator.processing {
  background: rgba(245, 158, 11, 0.9);
}

.status-indicator.speaking {
  background: rgba(16, 185, 129, 0.9);
}

/* Gradient Ring Effect - Remove background to let canvas show */
.gradient-ring {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  /* Remove background to let canvas show through */
  background: transparent;
  /* Remove animation as canvas handles its own effects */
  animation: none;
  z-index: 5; /* Lower than canvas */
}

@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
} 