# üöÄ RENDER DEPLOYMENT CONFIGURATION - FIXED & PRODUCTION READY
# ‚úÖ ƒê∆∞·ª£c c·∫≠p nh·∫≠t v·ªõi c·∫•u tr√∫c repo m·ªõi nh·∫•t v√† t·∫•t c·∫£ dependencies c·∫ßn thi·∫øt
# ‚úÖ S·ª≠a l·ªói build commands, migration sequence, v√† environment variables

services:
  - type: web
    name: demohotel19may25
    env: node
    region: oregon
    plan: free
    
    # ‚úÖ FIXED: Build command sequence ch√≠nh x√°c theo project structure
    buildCommand: |
      export NODE_OPTIONS="--max-old-space-size=1024" &&
      echo "üöÄ Starting Render deployment build..." &&
      npm ci --prefer-offline --no-audit &&
      echo "üèóÔ∏è  Generating Prisma client..." &&
      npx prisma generate &&
      echo "üóÑÔ∏è  Running database migrations..." &&
      npx prisma migrate deploy &&
      echo "üîß Running auto-migration scripts..." &&
      npm run migrate:auto &&
      echo "üî® Building production application..." &&
      npm run build:production &&
      echo "‚úÖ Build completed successfully!"
    
    # ‚úÖ VERIFIED: Start command matches package.json
    startCommand: npm run start
    
    # ‚úÖ ADDED: Health check endpoint t·ª´ healthController.ts  
    healthCheckPath: /api/health
    
    envVars:
      # ========== CORE APPLICATION SETTINGS ==========
      - key: NODE_ENV
        value: production
      - key: NODE_OPTIONS
        value: "--max-old-space-size=1024"
      - key: PORT
        value: 10000
      - key: CLIENT_URL
        sync: false
        # Set this to your frontend domain: https://your-frontend.onrender.com
        
      # ========== DATABASE (B·∫ÆT BU·ªòC) ==========
      # DATABASE_URL s·∫Ω ƒë∆∞·ª£c Render PostgreSQL service t·ª± ƒë·ªông cung c·∫•p
      # Ho·∫∑c th√™m manual n·∫øu d√πng external database
      
      # ========== AUTHENTICATION & SECURITY (B·∫ÆT BU·ªòC) ==========
      - key: JWT_SECRET
        sync: false
        # MUST SET: Minimum 32 characters secure string
      - key: STAFF_ACCOUNTS  
        sync: false
        # Format: admin@hotel.com:password,manager@hotel.com:password
        
      # ========== AI & VOICE INTEGRATION (CORE FEATURES) ==========
      - key: VITE_VAPI_PUBLIC_KEY
        sync: false
        # Format: pk_your-vapi-public-key
      - key: VITE_VAPI_ASSISTANT_ID  
        sync: false
        # Format: asst_your-assistant-id
      - key: VAPI_API_KEY
        sync: false
        # For dynamic assistant creation
      - key: VITE_OPENAI_API_KEY
        sync: false
        # Format: sk-your-openai-api-key
      - key: VITE_OPENAI_PROJECT_ID
        sync: false
        # Format: proj_your-project-id
        
      # ========== MULTI-LANGUAGE SUPPORT ==========
      - key: VITE_VAPI_PUBLIC_KEY_VI
        sync: false
        # Vietnamese assistant
      - key: VITE_VAPI_ASSISTANT_ID_VI
        sync: false
      - key: VITE_VAPI_PUBLIC_KEY_FR
        sync: false
        # French assistant  
      - key: VITE_VAPI_ASSISTANT_ID_FR
        sync: false
      - key: VITE_VAPI_PUBLIC_KEY_ZH
        sync: false
        # Chinese assistant
      - key: VITE_VAPI_ASSISTANT_ID_ZH
        sync: false
      - key: VITE_VAPI_PUBLIC_KEY_RU
        sync: false
        # Russian assistant
      - key: VITE_VAPI_ASSISTANT_ID_RU
        sync: false
      - key: VITE_VAPI_PUBLIC_KEY_KO
        sync: false
        # Korean assistant
      - key: VITE_VAPI_ASSISTANT_ID_KO
        sync: false
        
      # ========== HOTEL RESEARCH & APIS ==========
      - key: GOOGLE_PLACES_API_KEY
        sync: false
        # For hotel research functionality
        
      # ========== SAAS PLATFORM SETTINGS ==========
      - key: TALK2GO_DOMAIN
        value: talk2go.online
      - key: SUBDOMAIN_SUFFIX
        value: .talk2go.online
      - key: MINHON_TENANT_ID
        sync: false
        # Default tenant ID for Mi Nhon Hotel
        
      # ========== EMAIL SERVICES ==========
      - key: GMAIL_APP_PASSWORD
        sync: false
        # For sending call summaries
      - key: SUMMARY_EMAILS
        sync: false
        # Comma-separated email list: admin@hotel.com,manager@hotel.com
      - key: MAILJET_API_KEY
        sync: false
        # Optional: Alternative email service
      - key: MAILJET_SECRET_KEY
        sync: false
        
      # ========== FEATURE FLAGS ==========
      - key: ENABLE_HOTEL_RESEARCH
        value: "true"
      - key: ENABLE_DYNAMIC_ASSISTANT_CREATION
        value: "true"
      - key: ENABLE_MULTI_LANGUAGE_SUPPORT
        value: "true"
      - key: ENABLE_ANALYTICS_DASHBOARD
        value: "true"
      - key: ENABLE_BILLING_SYSTEM
        value: "false"
        
      # ========== PRODUCTION OPTIMIZATIONS ==========
      - key: AUTO_MIGRATE
        value: "true"
      - key: SEED_USERS
        value: "true"
      - key: AUTO_DB_FIX
        value: "false"
      - key: LOG_LEVEL
        value: "info"
      - key: ENABLE_METRICS
        value: "true"
      - key: ENABLE_HEALTH_CHECKS
        value: "true"
        
      # ========== SECURITY SETTINGS ==========
      - key: CORS_ORIGIN
        sync: false
        # Set to your frontend domain
      - key: RATE_LIMIT_WINDOW_MS
        value: "900000"
      - key: RATE_LIMIT_MAX_REQUESTS
        value: "100"
      - key: TRUST_PROXY
        value: "true"
        
    # ‚úÖ UPDATED: Node version compatible v·ªõi project requirements  
    nodeVersion: 18.20.8
    
    # ‚úÖ OPTIMIZED: Build filters ƒë·ªÉ tr√°nh rebuild kh√¥ng c·∫ßn thi·∫øt
    buildFilter:
      paths:
        - apps/**
        - packages/**
        - prisma/**
        - tools/scripts/maintenance/**
        - package.json
        - package-lock.json
        - tsconfig.json
        - vite.config.ts
      ignoredPaths:
        - "**/*.test.ts"
        - "**/*.spec.ts"  
        - "tests/**"
        - "docs/**"
        - "archive/**"
        - "reports/**"
        - "*.md"

# =========================================================================
# üö® CRITICAL SETUP STEPS AFTER DEPLOYMENT:
# =========================================================================
# 1. Create PostgreSQL database service on Render
# 2. Set all environment variables marked with 'sync: false'
# 3. Connect database service to web service
# 4. Set CLIENT_URL to your frontend domain
# 5. Set CORS_ORIGIN to match CLIENT_URL
# 6. Test health endpoint: https://your-app.onrender.com/api/health
# 7. Monitor logs for any missing environment variables
#
# üîß REQUIRED EXTERNAL SERVICES:
# - Render PostgreSQL Database
# - OpenAI API Account  
# - Vapi.ai Account
# - Google Places API
# - Gmail/Mailjet for emails
#
# üìù BACKUP CONFIG: Save this file as render-production.yaml
# =========================================================================