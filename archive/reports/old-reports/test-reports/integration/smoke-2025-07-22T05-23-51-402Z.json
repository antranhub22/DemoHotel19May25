{
  "success": false,
  "startTime": 1190.6048770006746,
  "endTime": 1248.1707480009645,
  "duration": 57.56587100028992,
  "testsRun": 4,
  "testsPassed": 3,
  "testsFailed": 1,
  "testSuites": [
    {
      "name": "Mi Nhon Hotel Compatibility",
      "status": "failed",
      "startTime": 1232.1159659996629,
      "endTime": 1247.9205140005797,
      "duration": 15.804548000916839,
      "tests": [
        {
          "id": "verify-mi-nhon-tenant",
          "name": "Verify Mi Nhon Hotel exists as tenant",
          "status": "passed",
          "startTime": 1232.448485000059,
          "endTime": 1238.0596070010215,
          "duration": 5.611122000962496
        },
        {
          "id": "verify-existing-data",
          "name": "Verify existing Mi Nhon data is preserved",
          "status": "passed",
          "startTime": 1238.0906670000404,
          "endTime": 1239.0924350004643,
          "duration": 1.0017680004239082
        },
        {
          "id": "test-voice-assistant",
          "name": "Test Mi Nhon voice assistant functionality",
          "status": "passed",
          "startTime": 1239.1037610005587,
          "endTime": 1239.1842420008034,
          "duration": 0.08048100024461746
        },
        {
          "id": "test-mi-nhon-features",
          "name": "Test all Mi Nhon features work",
          "status": "failed",
          "startTime": 1239.1928500011563,
          "endTime": 1240.325286000967,
          "duration": 1.1324359998106956,
          "error": "no such column: \"assistant_config\" - should this be a string literal in single-quotes?"
        }
      ]
    }
  ],
  "errors": [
    {
      "suite": "Mi Nhon Hotel Compatibility",
      "test": "test-mi-nhon-features",
      "message": "no such column: \"assistant_config\" - should this be a string literal in single-quotes?",
      "stack": "SqliteError: no such column: \"assistant_config\" - should this be a string literal in single-quotes?\n    at Database.prepare (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/better-sqlite3/lib/methods/wrappers.js:5:21)\n    at BetterSQLiteSession.prepareQuery (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/better-sqlite3/session.ts:50:28)\n    at BetterSQLiteSession.prepareOneTimeQuery (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/session.ts:135:15)\n    at SQLiteSelectBase._prepare (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/query-builders/select.ts:865:85)\n    at SQLiteSelectBase.all (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/query-builders/select.ts:884:15)\n    at SQLiteSelectBase.execute (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/query-builders/select.ts:896:15)\n    at SQLiteSelectBase.then (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/query-promise.ts:31:15)"
    },
    {
      "suite": "Mi Nhon Hotel Compatibility",
      "test": "suite",
      "message": "no such column: \"assistant_config\" - should this be a string literal in single-quotes?",
      "stack": "SqliteError: no such column: \"assistant_config\" - should this be a string literal in single-quotes?\n    at Database.prepare (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/better-sqlite3/lib/methods/wrappers.js:5:21)\n    at BetterSQLiteSession.prepareQuery (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/better-sqlite3/session.ts:50:28)\n    at BetterSQLiteSession.prepareOneTimeQuery (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/session.ts:135:15)\n    at SQLiteSelectBase._prepare (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/query-builders/select.ts:865:85)\n    at SQLiteSelectBase.all (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/query-builders/select.ts:884:15)\n    at SQLiteSelectBase.execute (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/query-builders/select.ts:896:15)\n    at SQLiteSelectBase.then (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/query-promise.ts:31:15)"
    },
    {
      "suite": "Integration Test Suite",
      "test": "main",
      "message": "no such column: \"assistant_config\" - should this be a string literal in single-quotes?",
      "stack": "SqliteError: no such column: \"assistant_config\" - should this be a string literal in single-quotes?\n    at Database.prepare (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/better-sqlite3/lib/methods/wrappers.js:5:21)\n    at BetterSQLiteSession.prepareQuery (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/better-sqlite3/session.ts:50:28)\n    at BetterSQLiteSession.prepareOneTimeQuery (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/session.ts:135:15)\n    at SQLiteSelectBase._prepare (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/query-builders/select.ts:865:85)\n    at SQLiteSelectBase.all (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/query-builders/select.ts:884:15)\n    at SQLiteSelectBase.execute (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/query-builders/select.ts:896:15)\n    at SQLiteSelectBase.then (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/query-promise.ts:31:15)"
    }
  ],
  "miNhonCompatibility": {
    "voiceAssistantWorking": true,
    "existingDataPreserved": true,
    "allFeaturesWorking": false,
    "noPerformanceDegradation": false,
    "apiEndpointsUnchanged": true
  },
  "newTenantFunctionality": {
    "canCreateNewTenant": false,
    "tenantHasIsolatedData": false,
    "tenantCanUseAllFeatures": false,
    "setupWizardWorks": false,
    "assistantCreationWorks": false
  },
  "dataIsolation": {
    "dataIsolationVerified": false,
    "crossTenantAccessBlocked": false,
    "tenantsCannotSeeOthersData": false,
    "queryFiltersWorking": false
  },
  "dashboardApis": {
    "hotelResearchWorks": false,
    "assistantGenerationWorks": false,
    "analyticsWork": false,
    "settingsWork": false,
    "multiTenantDataCorrect": false
  },
  "voiceInterface": {
    "miNhonVoiceWorks": false,
    "newTenantVoiceWorks": false,
    "tenantSpecificKnowledge": false,
    "assistantIsolation": false
  }
}
