{
  "success": false,
  "startTime": 1318.479469999671,
  "endTime": 1358.663697000593,
  "duration": 40.184227000921965,
  "testsRun": 0,
  "testsPassed": 0,
  "testsFailed": 0,
  "testSuites": [],
  "errors": [
    {
      "suite": "Integration Test Suite",
      "test": "main",
      "message": "no such table: tenants",
      "stack": "SqliteError: no such table: tenants\n    at Database.prepare (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/better-sqlite3/lib/methods/wrappers.js:5:21)\n    at BetterSQLiteSession.prepareQuery (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/better-sqlite3/session.ts:50:28)\n    at BetterSQLiteSession.prepareOneTimeQuery (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/session.ts:135:15)\n    at SQLiteSelectBase._prepare (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/query-builders/select.ts:865:85)\n    at SQLiteSelectBase.all (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/query-builders/select.ts:884:15)\n    at SQLiteSelectBase.execute (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/sqlite-core/query-builders/select.ts:896:15)\n    at SQLiteSelectBase.then (/Users/tuannguyen/Desktop/GITHUB REPOS/DemoHotel19May/node_modules/src/query-promise.ts:31:15)"
    }
  ],
  "miNhonCompatibility": {
    "voiceAssistantWorking": false,
    "existingDataPreserved": false,
    "allFeaturesWorking": false,
    "noPerformanceDegradation": false,
    "apiEndpointsUnchanged": false
  },
  "newTenantFunctionality": {
    "canCreateNewTenant": false,
    "tenantHasIsolatedData": false,
    "tenantCanUseAllFeatures": false,
    "setupWizardWorks": false,
    "assistantCreationWorks": false
  },
  "dataIsolation": {
    "dataIsolationVerified": false,
    "crossTenantAccessBlocked": false,
    "tenantsCannotSeeOthersData": false,
    "queryFiltersWorking": false
  },
  "dashboardApis": {
    "hotelResearchWorks": false,
    "assistantGenerationWorks": false,
    "analyticsWork": false,
    "settingsWork": false,
    "multiTenantDataCorrect": false
  },
  "voiceInterface": {
    "miNhonVoiceWorks": false,
    "newTenantVoiceWorks": false,
    "tenantSpecificKnowledge": false,
    "assistantIsolation": false
  }
}
